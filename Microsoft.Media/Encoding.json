{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2018-02-01-privatepreview"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "definitions": {
    "Preset": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all Media Processor Presets."
    },
    "Codec": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the codec label."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "A base class for all the codecs."
    },
    "Audio": {
      "x-ms-discriminator-value": "#Microsoft.Media.Audio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "channels": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets number of channels in the Audio."
        },
        "samplingRate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the sampling rate to use for encoding."
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the bitrate of the encoded audio."
        }
      },
      "type": "object",
      "description": "Default base class for all Audio codecs."
    },
    "AacAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.AacAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Audio"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "AacLc",
            "HeAacV1",
            "HeAacV2"
          ],
          "x-ms-enum": {
            "name": "AacAudioProfile",
            "values": [
              {
                "value": "AacLc",
                "description": "AAC Low complexity."
              },
              {
                "value": "HeAacV1",
                "description": "HE AAC V1."
              },
              {
                "value": "HeAacV2",
                "description": "HE AAC v2."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the audio profile."
        }
      },
      "type": "object",
      "description": "An object to represent AAC audio encoding settings."
    },
    "AudioAnalyzerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioAnalyzerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "audioLanguage": {
          "type": "string",
          "description": "Gets or sets the audio language for the video. Typically in the format of \"language code-country/region\" (e.g: en-US)"
        }
      },
      "type": "object",
      "description": "An audio analyzer preset that analyzes and transcribes the audio."
    },
    "Overlay": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputLabel": {
          "type": "string",
          "description": "Gets or sets the label of the Input used for the Overlay.   The Input must specify exactly one file to use."
        },
        "inputLoop": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the overlay is looped to match the duration of the input media."
        },
        "start": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration in the video at which the overlay starts. This is relative to the clip start if one is specified in a job. Default is from the beginning of the video."
        },
        "end": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration in the video at which the overlay ends.  This is relative to the clip start if specified in a job. Default is till the end of the video if InputLoop is  true. else the duration of the overlay."
        },
        "fadeInDuration": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration for how long the fade in happens. Default is no fade in."
        },
        "fadeOutDuration": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration for how long the fade out happens. Default is no fade out."
        },
        "audioGainLevel": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the gain level of audio in the overlay. Defaults to a value of 1.0."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all overlays."
    },
    "AudioOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An object to indicate audio overlay."
    },
    "CopyVideo": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyVideo",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "video copy codec."
    },
    "Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.Video",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "preserveResolutionAfterRotation": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to disable resolution change rotation."
        },
        "keyFrameInterval": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the distance between two key frames."
        },
        "stretchMode": {
          "type": "string",
          "enum": [
            "None",
            "AutoSize",
            "AutoFit"
          ],
          "x-ms-enum": {
            "name": "StretchMode",
            "values": [
              {
                "value": "None",
                "description": "Strictly respect the output resolution without considering the aspect ratio."
              },
              {
                "value": "AutoSize",
                "description": "Override the output resolution to keep the same aspect ratio between input and output without padding."
              },
              {
                "value": "AutoFit",
                "description": "Pad the output (with either letterbox or pillar box) to keep the same aspect ratio between input and output."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the Resolution Mode"
        },
        "syncMode": {
          "type": "string",
          "enum": [
            "Auto",
            "Passthrough",
            "Cfr",
            "Vfr",
            "Drop"
          ],
          "x-ms-enum": {
            "name": "VideoSyncMode",
            "values": [
              {
                "value": "Auto",
                "description": "Chooses between CFR and VFR depending on muxer capabilities. This is the default method"
              },
              {
                "value": "Passthrough",
                "description": "Each frame is passed with its timestamp from the de-muxer to the muxer Not expose this mode now as we do not see any useful scenarios out of it"
              },
              {
                "value": "Cfr",
                "description": "Frames will be duplicated and/or dropped to achieve exactly the requested constant frame rate"
              },
              {
                "value": "Vfr",
                "description": "Frames are passed through with their timestamp or dropped so as to prevent 2 frames from having the same timestamp"
              },
              {
                "value": "Drop",
                "description": "As pass through but destroys all timestamps, making the muxer generate fresh timestamps based on frame-rate"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the Video Sync Mode"
        }
      },
      "type": "object",
      "description": "Base class for all video codecs."
    },
    "Image": {
      "x-ms-discriminator-value": "#Microsoft.Media.Image",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "start": {
          "type": "string",
          "description": "Gets or sets the start position in the input from where to generate the thumbnails. Can be either absolute duration (e.g: PT05S) or relative value (e.g: 100%) Can also be a value like {Best} to select the best thumbnail."
        },
        "step": {
          "type": "string",
          "description": "Gets or sets the step condition attribute for the thumbnails. Can be either absolute duration (e.g: PT05S) or relative value (e.g: 10%)"
        },
        "range": {
          "type": "string",
          "description": "Gets or sets the Duration till which to generate the thumbnails. Can be either absolute duration (e.g: PT05S) or relative value (e.g: 100%)"
        }
      },
      "type": "object",
      "description": "Base class for all Image codecs."
    },
    "BmpImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.BmpImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of BMP images."
    },
    "Layer": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "width": {
          "type": "string",
          "description": "Gets or sets width of video in pixels for this layer."
        },
        "height": {
          "type": "string",
          "description": "Gets or sets height of video in pixels for this layer."
        },
        "condition": {
          "type": "string",
          "description": "Gets or sets the predicate to be evaluated before encoding this layer."
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the label for this layer."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Object to represent a video layer."
    },
    "BmpLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.BmpLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This represents a layer in the BmpImage class."
    },
    "ClosedCaption": {
      "x-ms-discriminator-value": "#Microsoft.Media.ClosedCaption",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "inputFile": {
          "type": "string",
          "description": "Gets or sets the source of the closed caption file It can be empty in the case the closed caption is from the ClosedCaptionStream selection in the source. If it present (side-car input), it has higher priority than the ClosedCaptionStream from the source."
        },
        "outputType": {
          "type": "string",
          "enum": [
            "SideCar",
            "Stream",
            "Embedded"
          ],
          "x-ms-enum": {
            "name": "ClosedCaptionType",
            "values": [
              {
                "value": "SideCar",
                "description": "The closed caption as a separate file"
              },
              {
                "value": "Stream",
                "description": "The closed caption as a separate stream inside media file"
              },
              {
                "value": "Embedded",
                "description": "The closed caption embedded within video elementary stream"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the closed caption output type"
        },
        "format": {
          "type": "string",
          "enum": [
            "Ttml",
            "WebVtt"
          ],
          "x-ms-enum": {
            "name": "ClosedCaptionFormat",
            "values": [
              {
                "value": "Ttml",
                "description": "TTML format."
              },
              {
                "value": "WebVtt",
                "description": "Web VTT format."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the Closed Caption output format"
        }
      },
      "type": "object",
      "required": [
        "outputType",
        "format"
      ],
      "description": "An object to represent closed caption encoding"
    },
    "Format": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "filenamePattern": {
          "type": "string",
          "description": "Gets or sets the pattern of the filename to use excluding the extension. REVIEW: List \"macros\" that can be used and give examples."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for output."
    },
    "OutputFile": {
      "properties": {
        "trackLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the track labels."
        }
      },
      "type": "object",
      "description": "Represent an output file."
    },
    "MultiBitrateFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.MultiBitrateFormat",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {
        "manifestFilename": {
          "type": "string",
          "description": "Gets or sets the pattern of the manifest file name to use excluding the extension. REVIEW: List \"macros\" that can be used and give examples."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "description": "Gets the list of output files."
        }
      },
      "type": "object",
      "description": "GOP aligned multi bitrate output."
    },
    "CmafFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.CmafFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A CMAF based output format."
    },
    "CopyAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An object to represent an audio copy codec."
    },
    "DDPlusAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.DDPlusAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Audio"
        }
      ],
      "properties": {
        "lfEon": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether \"LFE\" is on."
        },
        "acMode": {
          "type": "string",
          "enum": [
            "ACMOD20",
            "ACMOD32"
          ],
          "x-ms-enum": {
            "name": "DDPlusACMode",
            "values": [
              {
                "value": "ACMOD20",
                "description": "Mode 20."
              },
              {
                "value": "ACMOD32",
                "description": "Mode 32."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the AC mode."
        }
      },
      "type": "object",
      "required": [
        "lfEon",
        "acMode"
      ],
      "description": "An object to represent EAC3 audio encoding settings."
    },
    "Deinterlace": {
      "properties": {
        "parity": {
          "type": "string",
          "enum": [
            "Auto",
            "TopFieldFirst",
            "BottomFieldFirst"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceParity",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect the order of fields"
              },
              {
                "value": "TopFieldFirst",
                "description": "Top field first."
              },
              {
                "value": "BottomFieldFirst",
                "description": "bottom field first."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the parity to use."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Off",
            "AutoPixelAdaptive"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceMode",
            "values": [
              {
                "value": "Off",
                "description": "Disable deinterlace no matter whether the input is interlaced or not."
              },
              {
                "value": "AutoPixelAdaptive",
                "description": "Automatic pixel adaptive."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the deinterlace Mode"
        }
      },
      "type": "object",
      "description": "A class to define de-interlacing settings."
    },
    "Rectangle": {
      "properties": {
        "left": {
          "type": "string",
          "description": "Gets or sets number of pixels from the left-margin. This can be absolute pixel value e.g 100 or relative to the size of the video e.g: 50%."
        },
        "top": {
          "type": "string",
          "description": "Gets or sets number of pixels from the top-margin. This can be absolute pixel value e.g 100 or relative to the size of the video e.g: 50%."
        },
        "width": {
          "type": "string",
          "description": "Gets or sets width of the region in pixels. This can be absolute pixel value e.g 100 or relative to the size of the video e.g: 50%."
        },
        "height": {
          "type": "string",
          "description": "Gets or sets height of the region in pixels. This can be absolute pixel value e.g 100 or relative to the size of the video e.g: 50%."
        }
      },
      "type": "object",
      "description": "A class to represent a rectangle."
    },
    "VideoOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {
        "position": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the area in the video where the overlay is applied."
        },
        "opacity": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the opacity of the overlay."
        },
        "preserveAspectRatio": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the aspect ratio of the overlay needs to be preserved or not.  Defaults to true."
        },
        "cropRectangle": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the optional rectangle to crop the video overlay."
        }
      },
      "type": "object",
      "description": "A video overlay."
    },
    "Filters": {
      "properties": {
        "pad": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to pad the source to align jagged-edge audio and video."
        },
        "deinterlace": {
          "$ref": "#/definitions/Deinterlace",
          "description": "Gets or sets the default de-interlacing settings."
        },
        "rotation": {
          "type": "string",
          "enum": [
            "Auto",
            "None",
            "Rotate0",
            "Rotate90",
            "Rotate180",
            "Rotate270"
          ],
          "x-ms-enum": {
            "name": "Rotation",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect and rotate as needed."
              },
              {
                "value": "None",
                "description": "Do not rotate and keep the metadata intact."
              },
              {
                "value": "Rotate0",
                "description": "Rotate zero degrees."
              },
              {
                "value": "Rotate90",
                "description": "Rotate 90 degrees."
              },
              {
                "value": "Rotate180",
                "description": "Rotate 180 degrees."
              },
              {
                "value": "Rotate270",
                "description": "Rotate 270 degrees."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the rotation if any to be applied to the video."
        },
        "adjustLoudness": {
          "type": "string",
          "enum": [
            "None",
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "LoudnessAdjustment",
            "values": [
              {
                "value": "None",
                "description": "Leave loudness at its default value"
              },
              {
                "value": "Auto",
                "description": "Automatically reduce the loudness to -23dB as prescribed by EBUR128"
              },
              {
                "value": "Manual",
                "description": "Reduce the loudness to user prescribed value"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the loudness correction mode"
        },
        "loudnessInDB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the Loudness specified in decibels (Applicable for the case of AdjustLoudness.Manual"
        },
        "flip": {
          "type": "string",
          "enum": [
            "None",
            "Horizontal",
            "Vertical"
          ],
          "x-ms-enum": {
            "name": "Flip",
            "values": [
              {
                "value": "None",
                "description": "Do not flip the video."
              },
              {
                "value": "Horizontal",
                "description": "Flip the video horizontally."
              },
              {
                "value": "Vertical",
                "description": "Flip the video vertically"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets whether the video needs to be flipped."
        },
        "crop": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the co-ordinates of the video to be cropped."
        },
        "videoOverlay": {
          "$ref": "#/definitions/VideoOverlay",
          "description": "Gets or sets the details of the video overlay to apply if any."
        },
        "audioOverlay": {
          "$ref": "#/definitions/AudioOverlay",
          "description": "Gets or sets the details of the audio overlay to apply if any."
        }
      },
      "type": "object",
      "description": "A class to encapsulate all the filters for a source."
    },
    "VideoLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the layer bitrate."
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the maximum rate the VBV buffer should be assumed to refill at."
        },
        "bFrames": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of B-frames to be used when encoding this layer."
        },
        "frameRate": {
          "type": "string",
          "description": "Gets or sets the frame rate for encoding this layer."
        },
        "slices": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of slice to be used when encoding this layer."
        },
        "adaptiveBFrame": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether adaptive b-frames are used for this layer."
        }
      },
      "type": "object",
      "description": "A video layer."
    },
    "H264Layer": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Layer",
      "allOf": [
        {
          "$ref": "#/definitions/VideoLayer"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "Auto",
            "Baseline",
            "Main",
            "High",
            "High10",
            "High422",
            "High444"
          ],
          "x-ms-enum": {
            "name": "H264VideoProfile",
            "values": [
              {
                "value": "Auto",
                "description": "The encoder auto decide the appropriate profile"
              },
              {
                "value": "Baseline",
                "description": "Baseline H264 video profile"
              },
              {
                "value": "Main",
                "description": "Main H264 video profile"
              },
              {
                "value": "High",
                "description": "High H264 video profile."
              },
              {
                "value": "High10",
                "description": "High10 H264 video profile."
              },
              {
                "value": "High422",
                "description": "High 4 2 2 H264 video profile."
              },
              {
                "value": "High444",
                "description": "High 4 4 4 H264 video profile."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the video profile for this layer."
        },
        "level": {
          "type": "string",
          "description": "Gets or sets the video level for this layer."
        },
        "bufferWindow": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the VBV buffer Window length."
        },
        "referenceFrames": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of reference frames to be used when encoding this layer."
        },
        "entropyMode": {
          "type": "string",
          "enum": [
            "Cabac",
            "Cavlc"
          ],
          "x-ms-enum": {
            "name": "EntropyMode",
            "values": [
              {
                "value": "Cabac",
                "description": "CABAC (Context Adaptive Binary Arithmetic Coder) entropy encoding"
              },
              {
                "value": "Cavlc",
                "description": "CAVLC (Context Adaptive Variable Length Coder) entropy encoding"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the entropy mode to be used for this layer."
        }
      },
      "type": "object",
      "description": "A H.264 video layer."
    },
    "H264Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Video",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "sceneChangeDetection": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to use scene change detection during encoding"
        },
        "rateControlMode": {
          "type": "string",
          "enum": [
            "ABR",
            "CBR"
          ],
          "x-ms-enum": {
            "name": "H264RateControlMode",
            "values": [
              {
                "value": "ABR",
                "description": "Average bitrate to hit the target bitrate: defaulted mode."
              },
              {
                "value": "CBR",
                "description": "a CBR mode that tightens bitrate variations around target bitrate."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the video rate control mode"
        },
        "complexity": {
          "type": "string",
          "enum": [
            "Speed",
            "Balanced",
            "Quality"
          ],
          "x-ms-enum": {
            "name": "H264Complexity",
            "values": [
              {
                "value": "Speed",
                "description": "the setting optimized for speed"
              },
              {
                "value": "Balanced",
                "description": "Balanced setting between speed and quality"
              },
              {
                "value": "Quality",
                "description": "the setting optimized for quality"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the encoder complexity mode used for all layers"
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/H264Layer"
          },
          "description": "Gets the layers for the video."
        }
      },
      "type": "object",
      "description": "An object to represent H264 video encoding."
    },
    "ImageFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.ImageFormat",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Generates image file output."
    },
    "JpgImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JpgLayer"
          },
          "description": "Gets the list of layers."
        }
      },
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of Jpg images."
    },
    "JpgLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "quality": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the compression quality of the JPEG output. Range is from 0-100 and the default is 70."
        }
      },
      "type": "object",
      "description": "This represents a layer in the JpgImage class."
    },
    "Mp4Format": {
      "x-ms-discriminator-value": "#Microsoft.Media.Mp4Format",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "MP4 output."
    },
    "MultiBitrateMp4Format": {
      "x-ms-discriminator-value": "#Microsoft.Media.MultiBitrateMp4Format",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "GOP aligned multi bitrate MP4 output."
    },
    "PngImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PngLayer"
          },
          "description": "Gets the list of image layers."
        }
      },
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of Png images."
    },
    "PngLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This represents a layer in the PngImage class."
    },
    "BuiltInStandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.BuiltInStandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "presetName": {
          "type": "string",
          "enum": [
            "AdaptiveStreaming",
            "ContentAdaptiveMultipleBitrateMP4",
            "AACGoodQualityAudio",
            "H264MultipleBitrate1080p",
            "H264MultipleBitrate720p"
          ],
          "x-ms-enum": {
            "name": "EncoderNamedPreset",
            "values": [
              {
                "value": "AdaptiveStreaming",
                "description": "Auto-generate a bitrate ladder (bitrate-resolution pairs) based on the input resolution and bitrate. The auto-generated preset will never exceed the input resolution and bitrate. For example, if the input is 720p at 3Mbps, output will remain 720p at best, and will start at rates lower than 3Mbps. The output will will have video and audio in separate files, which is optimal for adaptive streaming."
              },
              {
                "value": "ContentAdaptiveMultipleBitrateMP4",
                "description": "Auto-generate a bitrate ladder (bitrate-resolution pairs) based on the input resolution and bitrate. The auto-generated preset will never exceed the input resolution and bitrate. For example, if the input is 720p at 3Mbps, output will remain 720p at best, and will start at rates lower than 3Mbps. The output contains MP4 files with audio and video interleaved, so that any one MP4 file can be used for delivery via progressive download, if desired."
              },
              {
                "value": "AACGoodQualityAudio",
                "description": "Produces a single MP4 file containing only stereo audio encoded at 192 kbps."
              },
              {
                "value": "H264MultipleBitrate1080p",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 6000 kbps to 400 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate720p",
                "description": "Produces a set of 6 GOP-aligned MP4 files, ranging from 3400 kbps to 400 kbps, and stereo AAC audio."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets or sets the built in preset to use."
        }
      },
      "type": "object",
      "required": [
        "presetName"
      ],
      "description": "Preset to use Media Encoder Standard (MES) with a built in named preset."
    },
    "StreamSelection": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "fileIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the file index where the stream is present."
        },
        "streamIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the stream index."
        },
        "isAbsoluteStreamIndex": {
          "type": "boolean",
          "description": "Gets a value indicating whether the stream index is absolute or relative to the stream type."
        },
        "streamSelectionMode": {
          "type": "string",
          "enum": [
            "SelectionNotSet",
            "SelectHighestBitrateStream",
            "SelectLowestBitrateStream",
            "SelectAllStreams"
          ],
          "x-ms-enum": {
            "name": "StreamSelectionMode",
            "values": [
              {
                "value": "SelectionNotSet",
                "description": "Preset does not set the stream selection"
              },
              {
                "value": "SelectHighestBitrateStream",
                "description": "Select the highest bitrate stream"
              },
              {
                "value": "SelectLowestBitrateStream",
                "description": "Select the lowest bitrate stream"
              },
              {
                "value": "SelectAllStreams",
                "description": "Select all the streams"
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Gets the stream selection mode."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "fileIndex",
        "streamIndex"
      ],
      "description": "An object to represent stream selection."
    },
    "StandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.StandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "streams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamSelection"
          },
          "description": "Gets the Stream definitions for this source."
        },
        "filters": {
          "$ref": "#/definitions/Filters",
          "description": "Gets or sets the filters for the preset."
        },
        "codecs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codec"
          },
          "description": "Gets the list of codecs to use."
        },
        "formats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Format"
          },
          "description": "Gets the list of outputs."
        }
      },
      "type": "object",
      "description": "Preset for Media Encoder Standard."
    },
    "VideoAnalyzerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoAnalyzerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/AudioAnalyzerPreset"
        }
      ],
      "properties": {
        "audioInsightsOnly": {
          "type": "boolean",
          "description": "Gets or sets whether to get insights for audio only."
        }
      },
      "type": "object",
      "description": "A video analyzer preset that analyzes both audio and video."
    },
    "ClosedCaptionStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.ClosedCaptionStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Object to represent closed caption stream selection."
    },
    "VideoStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Object to represent video stream selection."
    },
    "AudioStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {
        "languageTag": {
          "type": "string",
          "description": "Gets or sets the Audio Language Tag."
        },
        "audioChannelMapping": {
          "type": "string",
          "description": "Gets or sets the Audio channel mapping string."
        }
      },
      "type": "object",
      "description": "Object to represent audio stream selection."
    },
    "StreamingEndpointOptimizedFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.StreamingEndpointOptimizedFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateMp4Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A multi bitrate MP4 format that is optimized for use by streaming endpoint in Azure Media Services."
    },
    "TransportStreamFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.TransportStreamFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "ISO/IEC 13818-1, MPEG-2 Transport Stream output."
    },
    "TransformOutput": {
      "properties": {
        "onError": {
          "type": "string",
          "enum": [
            "StopProcessingJob",
            "ContinueJob"
          ],
          "x-ms-enum": {
            "name": "OnErrorType",
            "values": [
              {
                "value": "StopProcessingJob",
                "description": "Tells the service that if this TransformOutput fails, then any other incomplete TransformOutputs can stopped."
              },
              {
                "value": "ContinueJob",
                "description": "Tells the service that if this TransformOutput fails, then allow any other TransformOutput to continue."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Describes what to do if the output fails with the rest of the other outputs. The default is stop the rest of the outputs."
        },
        "relativePriority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Low",
                "description": "Used for less time sensitive Jobs."
              },
              {
                "value": "Normal",
                "description": "Normal priority."
              },
              {
                "value": "High",
                "description": "Used for Jobs that should take precedence over other Jobs."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This gives a hint to the system that one TransformOutput is higher priority than another in the same Transform. The default is normal."
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "description": "Preset that describes the Media Processor operation that will be used to generate the output."
        }
      },
      "type": "object",
      "required": [
        "preset"
      ],
      "description": "Describes an Output from the Transform"
    },
    "TransformProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Transform was created.",
          "readOnly": true,
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Customer supplied description of the transform."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Transform was last updated.",
          "readOnly": true,
          "x-nullable": false
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformOutput"
          },
          "description": "The outputs for the Transform."
        }
      },
      "type": "object",
      "required": [
        "outputs"
      ],
      "description": "A Transform."
    },
    "AvailablePresets": {
      "properties": {
        "presets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lists the available presets"
        }
      },
      "type": "object",
      "description": "The response message for available presets."
    },
    "Transform": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "$ref": "#/definitions/Tags",
          "description": "Optional resource tags."
        },
        "properties": {
          "$ref": "#/definitions/TransformProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A Media Transform that can be applied to an input by creating Jobs.",
      "x-ms-azure-resource": true
    },
    "Tags": {
      "properties": {},
      "type": "object"
    },
    "JobInput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "label": {
          "type": "string",
          "description": "Label of the JobInput.  Used to match JobInputs to TransformInputs.  If no Label is given then the JobInputs are matched by index."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for inputs to a Job."
    },
    "JobInputClip": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputClip",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of files.  Required for JobInputAzureBlob. It optionally can be used for JobInputAsset to tell the service to only use the files specified from the Asset."
        }
      },
      "type": "object",
      "description": "Represents Job Inputs that can have a start or end time specified to take a subset of the specified media."
    },
    "JobInputs": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputs",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInput"
          },
          "description": "List of Job inputs."
        }
      },
      "type": "object",
      "description": "Supports list of inputs to a Job."
    },
    "JobInputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Path to the asset such as \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}\"."
        }
      },
      "type": "object",
      "required": [
        "assetName"
      ],
      "description": "Represents an Asset for input into a Job."
    },
    "JobInputHttp": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputHttp",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Base uri for http job input. It will be concatenated with provided file names.   If no base uri is given, then the provided file list is assumed to be fully qualified uris."
        }
      },
      "type": "object",
      "description": "Represents http job input."
    },
    "JobOutput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "error": {
          "$ref": "#/definitions/JobError",
          "description": "If the JobOutput is in the error state, it contains the details of the error.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "State of the JobOutput.",
          "readOnly": true,
          "x-nullable": false
        },
        "progress": {
          "type": "integer",
          "format": "int32",
          "description": "If the JobOutput is in the processing state, it contains the percentage of the job completed from 0 to 100 percent.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for the output of a Job."
    },
    "JobError": {
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ],
          "x-ms-enum": {
            "name": "JobErrorCode",
            "values": [
              {
                "value": "ServiceError",
                "description": "Fatal service error, please contact support."
              },
              {
                "value": "ServiceTransientError",
                "description": "Transient error, please retry, if retry is unsuccessful, please contact support."
              },
              {
                "value": "DownloadNotAccessible",
                "description": "While trying to download the input files, the files were not accessible, please check the availability of the source."
              },
              {
                "value": "DownloadTransientError",
                "description": "While trying to download the input files, there was an issue during transfer (storage service, network errors), see details and check your source."
              },
              {
                "value": "UploadNotAccessible",
                "description": "While trying to upload the output files, the destination was not reachable, please should check the availability of the destination."
              },
              {
                "value": "UploadTransientError",
                "description": "While trying to upload the output files, there was an issue during transfer (storage service, network errors), see details and check your destination."
              },
              {
                "value": "ConfigurationUnsupported",
                "description": "There was a problem with input files and the configuration combination, fix the configuration and retry with the same input, or change input to match the configuration."
              },
              {
                "value": "ContentMalformed",
                "description": "There was a problem with the input content (i.e. zero byte files, or corrupt/non-decodable files), check the input files."
              },
              {
                "value": "ContentUnsupported",
                "description": "There was a problem with the format of the input (not valid media file, or an unsupported file/codec), check the validity of the input files."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Code describing the error.",
          "readOnly": true,
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "description": "A human-readable language-dependent representation of the error.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "enum": [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ],
          "x-ms-enum": {
            "name": "JobErrorCategory",
            "values": [
              {
                "value": "Service",
                "description": "The error is service related."
              },
              {
                "value": "Download",
                "description": "The error is download related."
              },
              {
                "value": "Upload",
                "description": "The error is upload related."
              },
              {
                "value": "Configuration",
                "description": "The error is configuration related."
              },
              {
                "value": "Content",
                "description": "The error is related to data in the input files."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Category to help caller categorize the error.",
          "readOnly": true,
          "x-nullable": false
        },
        "retry": {
          "type": "string",
          "enum": [
            "DoNotRetry",
            "MayRetry"
          ],
          "x-ms-enum": {
            "name": "JobRetry",
            "values": [
              {
                "value": "DoNotRetry",
                "description": "Issue needs to be investigated and then the job resubmitted with corrections or retried once the underlying issue has been corrected."
              },
              {
                "value": "MayRetry",
                "description": "Issue maybe resolved with wait and resubmit the same Job without further changes."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Indication that the job may be retried. If retry is unsuccessful, please contact support.",
          "readOnly": true,
          "x-nullable": false
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetail"
          },
          "description": "An array of details about specific errors that led to this reported error.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Details of JobOutput errors."
    },
    "JobOutputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobOutputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Path to the asset such as \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}\"."
        }
      },
      "type": "object",
      "required": [
        "assetName"
      ],
      "description": "Represents an Asset used as a JobOutput."
    },
    "JobErrorDetail": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Code describing the error detail.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Details of JobOutput errors."
    },
    "JobProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Job was created.",
          "readOnly": true,
          "x-nullable": false
        },
        "state": {
          "type": "string",
          "enum": [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "The current state of the job.",
          "readOnly": true,
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "The customer supplied description of the Job."
        },
        "input": {
          "$ref": "#/definitions/JobInput",
          "description": "The inputs for the Job."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Job was last updated.",
          "readOnly": true,
          "x-nullable": false
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobOutput"
          },
          "description": "The outputs for the Job."
        },
        "priority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Low",
                "description": "Used for less time sensitive Jobs."
              },
              {
                "value": "Normal",
                "description": "Normal priority."
              },
              {
                "value": "High",
                "description": "Used for Jobs that should take precedence over other Jobs."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "Priority with which the job should be processed.  Higher priority jobs are processed before lower priority jobs if there is resource contention. If not set, the default is normal."
        }
      },
      "type": "object",
      "required": [
        "input",
        "outputs"
      ],
      "description": "Properties of the Job."
    },
    "Job": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A Job resource type.",
      "x-ms-azure-resource": true
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object"
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError"
        }
      },
      "type": "object"
    },
    "TransformCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          },
          "description": "A collection of Transform items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object"
    },
    "JobCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "description": "A collection of Job items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms": {
      "get": {
        "summary": "List Transforms",
        "description": "Lists the Transforms in the account.",
        "operationId": "Transforms_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransformCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Specifies a non-negative integer n that excludes the first n items of the queried collection from the result. The service returns items starting at position n+1."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-odata": "#/definitions/Transform",
        "x-ms-examples": {
          "Lists the Transforms": {
            "$ref": "examples/transforms-list-all.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}": {
      "get": {
        "summary": "Get Transform",
        "description": "Gets a Transform.",
        "operationId": "Transforms_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Transform by name": {
            "$ref": "examples/transforms-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or Update Transform",
        "description": "Creates or updates a new Transform.",
        "operationId": "Transforms_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create or update a Transform": {
            "$ref": "examples/transforms-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Transform",
        "description": "Deletes a Transform.",
        "operationId": "Transforms_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Transform": {
            "$ref": "examples/transforms-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update Transform",
        "description": "Updates a Transform.",
        "operationId": "Transforms_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Transform.": {
            "$ref": "examples/transforms-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs": {
      "get": {
        "summary": "List Jobs",
        "description": "Lists all of the Jobs for the Transform.",
        "operationId": "Jobs_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Specifies a non-negative integer n that excludes the first n items of the queried collection from the result. The service returns items starting at position n+1."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-odata": "#/definitions/Job",
        "x-ms-examples": {
          "Lists all of the Jobs for the Transform.": {
            "$ref": "examples/jobs-list-all.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}": {
      "get": {
        "summary": "Get Job",
        "description": "Gets a Job.",
        "operationId": "Jobs_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Job by name": {
            "$ref": "examples/jobs-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create Job",
        "description": "Creates a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create a Job": {
            "$ref": "examples/jobs-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Job",
        "description": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Job": {
            "$ref": "examples/jobs-delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}/cancelJob": {
      "post": {
        "summary": "Cancel Job",
        "description": "Cancel a Job.",
        "operationId": "Jobs_CancelJob",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Cancel a Job": {
            "$ref": "examples/jobs-cancel.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource group name."
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name."
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version."
    }
  }
}