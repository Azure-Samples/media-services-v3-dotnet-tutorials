// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An object to represent closed caption encoding
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.ClosedCaption")]
    public partial class ClosedCaption : Codec
    {
        /// <summary>
        /// Initializes a new instance of the ClosedCaption class.
        /// </summary>
        public ClosedCaption()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClosedCaption class.
        /// </summary>
        /// <param name="outputType">Gets or sets the closed caption output
        /// type. Possible values include: 'SideCar', 'Stream',
        /// 'Embedded'</param>
        /// <param name="format">Gets or sets the Closed Caption output format.
        /// Possible values include: 'Ttml', 'WebVtt'</param>
        /// <param name="label">Gets or sets the codec label.</param>
        /// <param name="inputFile">Gets or sets the source of the closed
        /// caption file It can be empty in the case the closed caption is from
        /// the ClosedCaptionStream selection in the source. If it present
        /// (side-car input), it has higher priority than the
        /// ClosedCaptionStream from the source.</param>
        public ClosedCaption(ClosedCaptionType outputType, ClosedCaptionFormat format, string label = default(string), string inputFile = default(string))
            : base(label)
        {
            InputFile = inputFile;
            OutputType = outputType;
            Format = format;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the source of the closed caption file It can be empty
        /// in the case the closed caption is from the ClosedCaptionStream
        /// selection in the source. If it present (side-car input), it has
        /// higher priority than the ClosedCaptionStream from the source.
        /// </summary>
        [JsonProperty(PropertyName = "inputFile")]
        public string InputFile { get; set; }

        /// <summary>
        /// Gets or sets the closed caption output type. Possible values
        /// include: 'SideCar', 'Stream', 'Embedded'
        /// </summary>
        [JsonProperty(PropertyName = "outputType")]
        public ClosedCaptionType OutputType { get; set; }

        /// <summary>
        /// Gets or sets the Closed Caption output format. Possible values
        /// include: 'Ttml', 'WebVtt'
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public ClosedCaptionFormat Format { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
