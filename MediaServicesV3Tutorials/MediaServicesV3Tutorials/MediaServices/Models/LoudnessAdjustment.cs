// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for LoudnessAdjustment.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(LoudnessAdjustmentConverter))]
    public struct LoudnessAdjustment : System.IEquatable<LoudnessAdjustment>
    {
        private LoudnessAdjustment(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// Leave loudness at its default value
        /// </summary>
        public static readonly LoudnessAdjustment None = "None";

        /// <summary>
        /// Automatically reduce the loudness to -23dB as prescribed by EBUR128
        /// </summary>
        public static readonly LoudnessAdjustment Auto = "Auto";

        /// <summary>
        /// Reduce the loudness to user prescribed value
        /// </summary>
        public static readonly LoudnessAdjustment Manual = "Manual";


        /// <summary>
        /// Underlying value of enum LoudnessAdjustment
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for LoudnessAdjustment
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type LoudnessAdjustment
        /// </summary>
        public bool Equals(LoudnessAdjustment e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to LoudnessAdjustment
        /// </summary>
        public static implicit operator LoudnessAdjustment(string value)
        {
            return new LoudnessAdjustment(value);
        }

        /// <summary>
        /// Implicit operator to convert LoudnessAdjustment to string
        /// </summary>
        public static implicit operator string(LoudnessAdjustment e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum LoudnessAdjustment
        /// </summary>
        public static bool operator == (LoudnessAdjustment e1, LoudnessAdjustment e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum LoudnessAdjustment
        /// </summary>
        public static bool operator != (LoudnessAdjustment e1, LoudnessAdjustment e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for LoudnessAdjustment
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is LoudnessAdjustment && Equals((LoudnessAdjustment)obj);
        }

        /// <summary>
        /// Returns for hashCode LoudnessAdjustment
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
