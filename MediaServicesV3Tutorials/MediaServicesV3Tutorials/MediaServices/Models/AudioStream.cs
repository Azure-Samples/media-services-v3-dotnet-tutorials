// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Object to represent audio stream selection.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.AudioStream")]
    public partial class AudioStream : StreamSelection
    {
        /// <summary>
        /// Initializes a new instance of the AudioStream class.
        /// </summary>
        public AudioStream()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AudioStream class.
        /// </summary>
        /// <param name="fileIndex">Gets the file index where the stream is
        /// present.</param>
        /// <param name="streamIndex">Gets the stream index.</param>
        /// <param name="isAbsoluteStreamIndex">Gets a value indicating whether
        /// the stream index is absolute or relative to the stream
        /// type.</param>
        /// <param name="streamSelectionMode">Gets the stream selection mode.
        /// Possible values include: 'SelectionNotSet',
        /// 'SelectHighestBitrateStream', 'SelectLowestBitrateStream',
        /// 'SelectAllStreams'</param>
        /// <param name="languageTag">Gets or sets the Audio Language
        /// Tag.</param>
        /// <param name="audioChannelMapping">Gets or sets the Audio channel
        /// mapping string.</param>
        public AudioStream(int fileIndex, int streamIndex, bool? isAbsoluteStreamIndex = default(bool?), StreamSelectionMode? streamSelectionMode = default(StreamSelectionMode?), string languageTag = default(string), string audioChannelMapping = default(string))
            : base(fileIndex, streamIndex, isAbsoluteStreamIndex, streamSelectionMode)
        {
            LanguageTag = languageTag;
            AudioChannelMapping = audioChannelMapping;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the Audio Language Tag.
        /// </summary>
        [JsonProperty(PropertyName = "languageTag")]
        public string LanguageTag { get; set; }

        /// <summary>
        /// Gets or sets the Audio channel mapping string.
        /// </summary>
        [JsonProperty(PropertyName = "audioChannelMapping")]
        public string AudioChannelMapping { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
