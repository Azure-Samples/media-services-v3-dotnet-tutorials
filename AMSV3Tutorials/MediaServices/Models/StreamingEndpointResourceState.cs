// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for StreamingEndpointResourceState.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StreamingEndpointResourceState
    {
        [EnumMember(Value = "Stopped")]
        Stopped,
        [EnumMember(Value = "Starting")]
        Starting,
        [EnumMember(Value = "Running")]
        Running,
        [EnumMember(Value = "Stopping")]
        Stopping,
        [EnumMember(Value = "Deleting")]
        Deleting,
        [EnumMember(Value = "Scaling")]
        Scaling
    }
    internal static class StreamingEndpointResourceStateEnumExtension
    {
        internal static string ToSerializedValue(this StreamingEndpointResourceState? value)
        {
            return value == null ? null : ((StreamingEndpointResourceState)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this StreamingEndpointResourceState value)
        {
            switch( value )
            {
                case StreamingEndpointResourceState.Stopped:
                    return "Stopped";
                case StreamingEndpointResourceState.Starting:
                    return "Starting";
                case StreamingEndpointResourceState.Running:
                    return "Running";
                case StreamingEndpointResourceState.Stopping:
                    return "Stopping";
                case StreamingEndpointResourceState.Deleting:
                    return "Deleting";
                case StreamingEndpointResourceState.Scaling:
                    return "Scaling";
            }
            return null;
        }

        internal static StreamingEndpointResourceState? ParseStreamingEndpointResourceState(this string value)
        {
            switch( value )
            {
                case "Stopped":
                    return StreamingEndpointResourceState.Stopped;
                case "Starting":
                    return StreamingEndpointResourceState.Starting;
                case "Running":
                    return StreamingEndpointResourceState.Running;
                case "Stopping":
                    return StreamingEndpointResourceState.Stopping;
                case "Deleting":
                    return StreamingEndpointResourceState.Deleting;
                case "Scaling":
                    return StreamingEndpointResourceState.Scaling;
            }
            return null;
        }
    }
}
