// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Base type for all overlays - image, audio or video.
    /// </summary>
    public partial class Overlay
    {
        /// <summary>
        /// Initializes a new instance of the Overlay class.
        /// </summary>
        public Overlay()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Overlay class.
        /// </summary>
        /// <param name="inputLabel">Gets or sets the label of the Input which
        /// is to be used as an Overlay. The Input must specify exactly one
        /// file.</param>
        /// <param name="inputLoop">Gets or sets a value indicating whether the
        /// overlay media is looped to match the duration of the input video.
        /// The default is true. For example, you may have a 5 second animation
        /// that needs to be overlaid onto an hour-long video - you would set
        /// inputLoop to true in this case.</param>
        /// <param name="start">Gets or sets the start position, with reference
        /// to the input video, at which the overlay starts. The value should
        /// be in ISO 8601 format. The default is zero, which means the overlay
        /// starts from the beginning of the input video.</param>
        /// <param name="end">Gets or sets the position in the input video at
        /// which the overlay ends. The value should be in ISO 8601 format. The
        /// default behavior is that overlay will be applied until the end of
        /// the input video if InputLoop is true. Else, if inputLoop is false,
        /// then overlay will last as long as the duration of the overlay
        /// media.</param>
        /// <param name="fadeInDuration">Gets or sets the duration over which
        /// the overlay fades in onto the input video. The value should be in
        /// ISO 8601 format. The default is to have no fade in</param>
        /// <param name="fadeOutDuration">Gets or sets the duration over which
        /// the overlay fades out of the input video. The value should be in
        /// ISO 8601 format. The default is to have no fade out."</param>
        /// <param name="audioGainLevel">Gets or sets the gain level of audio
        /// in the overlay. The value should be in the range [0, ..., 1.0].
        /// Defaults to a value of 1.0.</param>
        public Overlay(string inputLabel = default(string), bool? inputLoop = default(bool?), System.TimeSpan? start = default(System.TimeSpan?), System.TimeSpan? end = default(System.TimeSpan?), System.TimeSpan? fadeInDuration = default(System.TimeSpan?), System.TimeSpan? fadeOutDuration = default(System.TimeSpan?), double? audioGainLevel = default(double?))
        {
            InputLabel = inputLabel;
            InputLoop = inputLoop;
            Start = start;
            End = end;
            FadeInDuration = fadeInDuration;
            FadeOutDuration = fadeOutDuration;
            AudioGainLevel = audioGainLevel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the label of the Input which is to be used as an
        /// Overlay. The Input must specify exactly one file.
        /// </summary>
        [JsonProperty(PropertyName = "inputLabel")]
        public string InputLabel { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the overlay media is looped
        /// to match the duration of the input video. The default is true. For
        /// example, you may have a 5 second animation that needs to be
        /// overlaid onto an hour-long video - you would set inputLoop to true
        /// in this case.
        /// </summary>
        [JsonProperty(PropertyName = "inputLoop")]
        public bool? InputLoop { get; set; }

        /// <summary>
        /// Gets or sets the start position, with reference to the input video,
        /// at which the overlay starts. The value should be in ISO 8601
        /// format. The default is zero, which means the overlay starts from
        /// the beginning of the input video.
        /// </summary>
        [JsonProperty(PropertyName = "start")]
        public System.TimeSpan? Start { get; set; }

        /// <summary>
        /// Gets or sets the position in the input video at which the overlay
        /// ends. The value should be in ISO 8601 format. The default behavior
        /// is that overlay will be applied until the end of the input video if
        /// InputLoop is true. Else, if inputLoop is false, then overlay will
        /// last as long as the duration of the overlay media.
        /// </summary>
        [JsonProperty(PropertyName = "end")]
        public System.TimeSpan? End { get; set; }

        /// <summary>
        /// Gets or sets the duration over which the overlay fades in onto the
        /// input video. The value should be in ISO 8601 format. The default is
        /// to have no fade in
        /// </summary>
        [JsonProperty(PropertyName = "fadeInDuration")]
        public System.TimeSpan? FadeInDuration { get; set; }

        /// <summary>
        /// Gets or sets the duration over which the overlay fades out of the
        /// input video. The value should be in ISO 8601 format. The default is
        /// to have no fade out."
        /// </summary>
        [JsonProperty(PropertyName = "fadeOutDuration")]
        public System.TimeSpan? FadeOutDuration { get; set; }

        /// <summary>
        /// Gets or sets the gain level of audio in the overlay. The value
        /// should be in the range [0, ..., 1.0]. Defaults to a value of 1.0.
        /// </summary>
        [JsonProperty(PropertyName = "audioGainLevel")]
        public double? AudioGainLevel { get; set; }

    }
}
