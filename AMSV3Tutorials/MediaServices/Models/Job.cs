// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// A Job resource type.
    /// </summary>
    [JsonTransformation]
    public partial class Job : IResource
    {
        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        public Job()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Job class.
        /// </summary>
        /// <param name="input">The inputs for the Job.</param>
        /// <param name="outputs">The outputs for the Job.</param>
        /// <param name="name">The resource name.</param>
        /// <param name="id">The resource ID.</param>
        /// <param name="type">The resource type.</param>
        /// <param name="created">The date and time when the Job was
        /// created.</param>
        /// <param name="state">The current state of the job. Possible values
        /// include: 'Canceled', 'Canceling', 'Error', 'Finished',
        /// 'Processing', 'Queued', 'Scheduled'</param>
        /// <param name="description">The customer supplied description of the
        /// Job.</param>
        /// <param name="lastModified">The date and time when the Job was last
        /// updated.</param>
        /// <param name="priority">Priority with which the job should be
        /// processed.  Higher priority jobs are processed before lower
        /// priority jobs if there is resource contention. If not set, the
        /// default is normal. Possible values include: 'Low', 'Normal',
        /// 'High'</param>
        public Job(JobInput input, IList<JobOutput> outputs, string name = default(string), string id = default(string), string type = default(string), System.DateTimeOffset created = default(System.DateTimeOffset), JobState state = default(JobState), string description = default(string), System.DateTimeOffset lastModified = default(System.DateTimeOffset), Priority? priority = default(Priority?))
        {
            Name = name;
            Id = id;
            Type = type;
            Created = created;
            State = state;
            Description = description;
            Input = input;
            LastModified = lastModified;
            Outputs = outputs;
            Priority = priority;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the resource name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets the resource ID.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets the resource type.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; private set; }

        /// <summary>
        /// Gets the date and time when the Job was created.
        /// </summary>
        [JsonProperty(PropertyName = "properties.created")]
        public System.DateTimeOffset Created { get; private set; }

        /// <summary>
        /// Gets the current state of the job. Possible values include:
        /// 'Canceled', 'Canceling', 'Error', 'Finished', 'Processing',
        /// 'Queued', 'Scheduled'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public JobState State { get; private set; }

        /// <summary>
        /// Gets or sets the customer supplied description of the Job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the inputs for the Job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.input")]
        public JobInput Input { get; set; }

        /// <summary>
        /// Gets the date and time when the Job was last updated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModified")]
        public System.DateTimeOffset LastModified { get; private set; }

        /// <summary>
        /// Gets or sets the outputs for the Job.
        /// </summary>
        [JsonProperty(PropertyName = "properties.outputs")]
        public IList<JobOutput> Outputs { get; set; }

        /// <summary>
        /// Gets or sets priority with which the job should be processed.
        /// Higher priority jobs are processed before lower priority jobs if
        /// there is resource contention. If not set, the default is normal.
        /// Possible values include: 'Low', 'Normal', 'High'
        /// </summary>
        [JsonProperty(PropertyName = "properties.priority")]
        public Priority? Priority { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Input == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Input");
            }
            if (Outputs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Outputs");
            }
        }
    }
}
