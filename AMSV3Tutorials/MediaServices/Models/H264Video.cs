// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Describes all the properties for encoding a video with the H264 codec.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.H264Video")]
    public partial class H264Video : Video
    {
        /// <summary>
        /// Initializes a new instance of the H264Video class.
        /// </summary>
        public H264Video()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the H264Video class.
        /// </summary>
        /// <param name="label">Describes the optional label for the
        /// codec.</param>
        /// <param name="keyFrameInterval">Describes the distance between one
        /// key frame and the next, thereby defining a GOP or group of
        /// pictures. The value should be a non-zero integer in the range [1,
        /// .., 30], specified in ISO 8601 format. The default is 2
        /// seconds.</param>
        /// <param name="stretchMode">Describes the resizing mode - how the
        /// input video will be resized to fit the desired output
        /// resolution(s). Default is AutoSize. Possible values include:
        /// 'None', 'AutoSize', 'AutoFit'</param>
        /// <param name="sceneChangeDetection">Determines whether or not the
        /// encoder should insert key frames at scene changes. If not
        /// specified, the default is false.</param>
        /// <param name="complexity">Tells the encoder how to choose its
        /// low-level settings. The default is Balanced. Possible values
        /// include: 'Speed', 'Balanced', 'Quality'</param>
        /// <param name="layers">Describes a collection of output H264 layers
        /// to be produced by the encoder.</param>
        public H264Video(string label = default(string), System.TimeSpan? keyFrameInterval = default(System.TimeSpan?), StretchMode? stretchMode = default(StretchMode?), bool? sceneChangeDetection = default(bool?), H264Complexity? complexity = default(H264Complexity?), IList<H264Layer> layers = default(IList<H264Layer>))
            : base(label, keyFrameInterval, stretchMode)
        {
            SceneChangeDetection = sceneChangeDetection;
            Complexity = complexity;
            Layers = layers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets determines whether or not the encoder should insert
        /// key frames at scene changes. If not specified, the default is
        /// false.
        /// </summary>
        [JsonProperty(PropertyName = "sceneChangeDetection")]
        public bool? SceneChangeDetection { get; set; }

        /// <summary>
        /// Gets or sets tells the encoder how to choose its low-level
        /// settings. The default is Balanced. Possible values include:
        /// 'Speed', 'Balanced', 'Quality'
        /// </summary>
        [JsonProperty(PropertyName = "complexity")]
        public H264Complexity? Complexity { get; set; }

        /// <summary>
        /// Gets or sets describes a collection of output H264 layers to be
        /// produced by the encoder.
        /// </summary>
        [JsonProperty(PropertyName = "layers")]
        public IList<H264Layer> Layers { get; set; }

    }
}
