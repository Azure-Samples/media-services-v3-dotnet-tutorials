// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for H264Complexity.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(H264ComplexityConverter))]
    public struct H264Complexity : System.IEquatable<H264Complexity>
    {
        private H264Complexity(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// the setting optimized for speed
        /// </summary>
        public static readonly H264Complexity Speed = "Speed";

        /// <summary>
        /// Balanced setting between speed and quality
        /// </summary>
        public static readonly H264Complexity Balanced = "Balanced";

        /// <summary>
        /// the setting optimized for quality
        /// </summary>
        public static readonly H264Complexity Quality = "Quality";


        /// <summary>
        /// Underlying value of enum H264Complexity
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for H264Complexity
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type H264Complexity
        /// </summary>
        public bool Equals(H264Complexity e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to H264Complexity
        /// </summary>
        public static implicit operator H264Complexity(string value)
        {
            return new H264Complexity(value);
        }

        /// <summary>
        /// Implicit operator to convert H264Complexity to string
        /// </summary>
        public static implicit operator string(H264Complexity e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum H264Complexity
        /// </summary>
        public static bool operator == (H264Complexity e1, H264Complexity e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum H264Complexity
        /// </summary>
        public static bool operator != (H264Complexity e1, H264Complexity e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for H264Complexity
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is H264Complexity && Equals((H264Complexity)obj);
        }

        /// <summary>
        /// Returns for hashCode H264Complexity
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
