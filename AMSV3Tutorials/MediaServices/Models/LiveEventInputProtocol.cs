// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for LiveEventInputProtocol.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum LiveEventInputProtocol
    {
        [EnumMember(Value = "FragmentedMP4")]
        FragmentedMP4,
        [EnumMember(Value = "RTMP")]
        RTMP,
        [EnumMember(Value = "RTPMPEG2TS")]
        RTPMPEG2TS
    }
    internal static class LiveEventInputProtocolEnumExtension
    {
        internal static string ToSerializedValue(this LiveEventInputProtocol? value)
        {
            return value == null ? null : ((LiveEventInputProtocol)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this LiveEventInputProtocol value)
        {
            switch( value )
            {
                case LiveEventInputProtocol.FragmentedMP4:
                    return "FragmentedMP4";
                case LiveEventInputProtocol.RTMP:
                    return "RTMP";
                case LiveEventInputProtocol.RTPMPEG2TS:
                    return "RTPMPEG2TS";
            }
            return null;
        }

        internal static LiveEventInputProtocol? ParseLiveEventInputProtocol(this string value)
        {
            switch( value )
            {
                case "FragmentedMP4":
                    return LiveEventInputProtocol.FragmentedMP4;
                case "RTMP":
                    return LiveEventInputProtocol.RTMP;
                case "RTPMPEG2TS":
                    return LiveEventInputProtocol.RTPMPEG2TS;
            }
            return null;
        }
    }
}
