// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A video overlay.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.VideoOverlay")]
    public partial class VideoOverlay : Overlay
    {
        /// <summary>
        /// Initializes a new instance of the VideoOverlay class.
        /// </summary>
        public VideoOverlay()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoOverlay class.
        /// </summary>
        /// <param name="inputLabel">Gets or sets the label of the Input used
        /// for the Overlay.   The Input must specify exactly one file to
        /// use.</param>
        /// <param name="inputLoop">Gets or sets a value indicating whether the
        /// overlay is looped to match the duration of the input media.</param>
        /// <param name="start">Gets or sets the duration in the video at which
        /// the overlay starts. This is relative to the clip start if one is
        /// specified in a job. Default is from the beginning of the
        /// video.</param>
        /// <param name="end">Gets or sets the duration in the video at which
        /// the overlay ends.  This is relative to the clip start if specified
        /// in a job. Default is till the end of the video if InputLoop is
        /// true. else the duration of the overlay.</param>
        /// <param name="fadeInDuration">Gets or sets the duration for how long
        /// the fade in happens. Default is no fade in.</param>
        /// <param name="fadeOutDuration">Gets or sets the duration for how
        /// long the fade out happens. Default is no fade out.</param>
        /// <param name="audioGainLevel">Gets or sets the gain level of audio
        /// in the overlay. Defaults to a value of 1.0.</param>
        /// <param name="position">Gets or sets the area in the video where the
        /// overlay is applied.</param>
        /// <param name="opacity">Gets or sets the opacity of the
        /// overlay.</param>
        /// <param name="preserveAspectRatio">Gets or sets a value indicating
        /// whether the aspect ratio of the overlay needs to be preserved or
        /// not.  Defaults to true.</param>
        /// <param name="cropRectangle">Gets or sets the optional rectangle to
        /// crop the video overlay.</param>
        public VideoOverlay(string inputLabel = default(string), bool? inputLoop = default(bool?), System.TimeSpan? start = default(System.TimeSpan?), System.TimeSpan? end = default(System.TimeSpan?), System.TimeSpan? fadeInDuration = default(System.TimeSpan?), System.TimeSpan? fadeOutDuration = default(System.TimeSpan?), double? audioGainLevel = default(double?), Rectangle position = default(Rectangle), double? opacity = default(double?), bool? preserveAspectRatio = default(bool?), Rectangle cropRectangle = default(Rectangle))
            : base(inputLabel, inputLoop, start, end, fadeInDuration, fadeOutDuration, audioGainLevel)
        {
            Position = position;
            Opacity = opacity;
            PreserveAspectRatio = preserveAspectRatio;
            CropRectangle = cropRectangle;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the area in the video where the overlay is applied.
        /// </summary>
        [JsonProperty(PropertyName = "position")]
        public Rectangle Position { get; set; }

        /// <summary>
        /// Gets or sets the opacity of the overlay.
        /// </summary>
        [JsonProperty(PropertyName = "opacity")]
        public double? Opacity { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the aspect ratio of the
        /// overlay needs to be preserved or not.  Defaults to true.
        /// </summary>
        [JsonProperty(PropertyName = "preserveAspectRatio")]
        public bool? PreserveAspectRatio { get; set; }

        /// <summary>
        /// Gets or sets the optional rectangle to crop the video overlay.
        /// </summary>
        [JsonProperty(PropertyName = "cropRectangle")]
        public Rectangle CropRectangle { get; set; }

    }
}
