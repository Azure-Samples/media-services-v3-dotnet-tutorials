// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// </auto-generated>

namespace Microsoft.Media.Encoding.Rest.ArmClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Describes the properties of a video overlay.
    /// </summary>
    [Newtonsoft.Json.JsonObject("#Microsoft.Media.VideoOverlay")]
    public partial class VideoOverlay : Overlay
    {
        /// <summary>
        /// Initializes a new instance of the VideoOverlay class.
        /// </summary>
        public VideoOverlay()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VideoOverlay class.
        /// </summary>
        /// <param name="inputLabel">Gets or sets the label of the Input which
        /// is to be used as an Overlay. The Input must specify exactly one
        /// file.</param>
        /// <param name="inputLoop">Gets or sets a value indicating whether the
        /// overlay media is looped to match the duration of the input video.
        /// The default is true. For example, you may have a 5 second animation
        /// that needs to be overlaid onto an hour-long video - you would set
        /// inputLoop to true in this case.</param>
        /// <param name="start">Gets or sets the start position, with reference
        /// to the input video, at which the overlay starts. The value should
        /// be in ISO 8601 format. The default is zero, which means the overlay
        /// starts from the beginning of the input video.</param>
        /// <param name="end">Gets or sets the position in the input video at
        /// which the overlay ends. The value should be in ISO 8601 format. The
        /// default behavior is that overlay will be applied until the end of
        /// the input video if InputLoop is true. Else, if inputLoop is false,
        /// then overlay will last as long as the duration of the overlay
        /// media.</param>
        /// <param name="fadeInDuration">Gets or sets the duration over which
        /// the overlay fades in onto the input video. The value should be in
        /// ISO 8601 format. The default is to have no fade in</param>
        /// <param name="fadeOutDuration">Gets or sets the duration over which
        /// the overlay fades out of the input video. The value should be in
        /// ISO 8601 format. The default is to have no fade out."</param>
        /// <param name="audioGainLevel">Gets or sets the gain level of audio
        /// in the overlay. The value should be in the range [0, ..., 1.0].
        /// Defaults to a value of 1.0.</param>
        /// <param name="position">Describes the area in the input video where
        /// the overlay is applied.</param>
        /// <param name="opacity">Describes the opacity of the overlay. This is
        /// a value in the range [0 - 1.0]. Default is 1.0</param>
        /// <param name="cropRectangle">Describes the an optional rectangular
        /// window used to crop the overlay image or video.</param>
        public VideoOverlay(string inputLabel = default(string), bool? inputLoop = default(bool?), System.TimeSpan? start = default(System.TimeSpan?), System.TimeSpan? end = default(System.TimeSpan?), System.TimeSpan? fadeInDuration = default(System.TimeSpan?), System.TimeSpan? fadeOutDuration = default(System.TimeSpan?), double? audioGainLevel = default(double?), Rectangle position = default(Rectangle), double? opacity = default(double?), Rectangle cropRectangle = default(Rectangle))
            : base(inputLabel, inputLoop, start, end, fadeInDuration, fadeOutDuration, audioGainLevel)
        {
            Position = position;
            Opacity = opacity;
            CropRectangle = cropRectangle;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets describes the area in the input video where the
        /// overlay is applied.
        /// </summary>
        [JsonProperty(PropertyName = "position")]
        public Rectangle Position { get; set; }

        /// <summary>
        /// Gets or sets describes the opacity of the overlay. This is a value
        /// in the range [0 - 1.0]. Default is 1.0
        /// </summary>
        [JsonProperty(PropertyName = "opacity")]
        public double? Opacity { get; set; }

        /// <summary>
        /// Gets or sets describes the an optional rectangular window used to
        /// crop the overlay image or video.
        /// </summary>
        [JsonProperty(PropertyName = "cropRectangle")]
        public Rectangle CropRectangle { get; set; }

    }
}
